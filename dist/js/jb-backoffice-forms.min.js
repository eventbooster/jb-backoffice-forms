"use strict";var AutoInputController=function(e,t){this.$attrs=t,this.$scope=e,this.$scope.entityName=void 0,this.$scope.entityUrl=void 0,e.data={value:void 0,name:t["for"],valid:!0},this.element=void 0,this.detailViewController=void 0};AutoInputController.prototype.init=function(e,t){this.element=e,this.detailViewController=t,this.$scope.entityName=t.getEntityName(),this.$scope.entityId=t.getEntityId(),this.detailViewController.register(this),this.afterInit&&angular.isFunction(this.afterInit)&&this.afterInit(),this.updateData?this.detailViewController.registerGetDataHandler(this.updateData.bind(this)):console.error("AutoInputController: updateData method missing in %o %o",this,e)},function(){angular.module("jb.backofficeFormComponents",[])}(),angular.module("jb.backofficeAutoFormElement",[]).directive("autoFormElement",["$compile",function(){return{require:["autoFormElement","^detailView"],link:function(e,t,a,o){o[0].init(t,o[1])},controller:"AutoFormElementController",scope:!0}}]).controller("AutoFormElementController",["$scope","$attrs","$compile","$rootScope",function(e,t,a){var o,n,i=e,l=this;l.optionUpdateHandler=function(e){if(!e||!e[r])return void console.error("AutoFormElement: Can't update element, specs for field %o missing in %o",r,e);var t=e[r];l.updateElement(t),n.removeOptionsDataHandler(l.optionUpdateHandler)},l.init=function(e,t){n=t,n.registerOptionsDataHandler(l.optionUpdateHandler),o=e};var r=t["for"];l.updateElement=function(e){var n;if(!e||!e.type)return void console.error("AutoFormElement: fieldSpec %o is missing type",e);switch(e.type){case"text":n="text";break;case"number":n="text";break;case"boolean":n="checkbox";break;case"relation":n="relation";break;case"language":n="language";break;case"image":n="image";break;case"datetime":n="dateTime";break;default:console.error("AutoFormElement: Unknown type %o",e.type)}if(!n)return void console.error("AutoFormElement: elementType missing for element %o",o);console.log("AutoFormElement: Create new %s from %o",n,e);var l=n.replace(/[A-Z]/g,function(e){return"-"+e.toLowerCase()});i.optionData=e,i.originalAttributes=t;var s=$("<div data-auto-"+l+"-input data-for='"+r+"'></div>");o.replaceWith(s),a(s)(i)}}]);var AutoCheckboxInputController=function(e,t){AutoInputController.call(this,e,t),this.select=this.$scope.data.name};AutoCheckboxInputController.prototype=Object.create(AutoInputController.prototype),AutoCheckboxInputController.prototype.constructor=AutoCheckboxInputController,AutoCheckboxInputController.prototype.updateData=function(e){this.originalData=this.$scope.data.value=e[this.$attrs["for"]]},AutoCheckboxInputController.prototype.getSaveCalls=function(){if(this.originalData===this.$scope.data.value)return!1;var e={};return e[this.$scope.data.name]=this.$scope.data.value,console.error(e),{url:"",data:e,method:this.detailViewController.getEntityId()?"PATCH":"POST"}},angular.module("jb.backofficeAutoFormElement").directive("autoCheckboxInput",[function(){return{require:["autoCheckboxInput","^detailView"],controller:"AutoCheckboxInputController",link:function(e,t,a,o){o[0].init(t,o[1])},templateUrl:"autoCheckboxInputTemplate.html"}}]).controller("AutoCheckboxInputController",AutoCheckboxInputController).run(function(e){e.put("autoCheckboxInputTemplate.html","<div class='form-group'><label data-backoffice-label data-label-identifier='{{data.name}}' data-is-valid='true' data-is-required='false'></label><div class='col-md-9'><div class='checkbox'><input type='checkbox' data-ng-model='data.value'/></div></div></div>")});var AutoDateTimeInputController=function(e,t){AutoInputController.call(this,e,t),this.select=t["for"],this.originalData=void 0,this.$scope.date=void 0,e.showTime=this.$scope.optionData.time,e.isRequired=function(){return this.optionData.required},e.isValid=function(){return!this.optionData.required||this.optionData.required&&this.$scope.date}};AutoDateTimeInputController.prototype=Object.create(AutoInputController.prototype),AutoDateTimeInputController.prototype.constructor=AutoDateTimeInputController,AutoDateTimeInputController.prototype.updateData=function(e){var t=e[this.$attrs["for"]];this.$scope.date=t?new Date(t):void 0,this.originalData=this.$scope.date},AutoDateTimeInputController.prototype.getSaveCalls=function(){var e=this.$scope.date;if(!e&&!this.originalData)return!1;if(this.originalData&&e.getTime()===this.originalData.getTime())return!1;var t=e.getFullYear()+"-"+(e.getMonth()+1)+"-"+e.getDate()+" "+e.getHours()+":"+e.getMinutes()+":"+e.getSeconds(),a={};return a[this.$scope.data.name]=t,{data:a}},angular.module("jb.dateTime",[]).directive("autoDateTimeInput",[function(){return{templateUrl:"dateTimeInputTemplate.html",controller:"AutoDateTimeInputController",require:["autoDateTimeInput","^detailView"],link:function(e,t,a,o){o[0].init(t,o[1])}}}]).controller("AutoDateTimeInputController",AutoDateTimeInputController).run(function(e){e.put("dateTimeInputTemplate.html","<div class='form-group form-group-sm'><label data-backoffice-label data-label-identifier='{{data.name}}' data-is-required='isRequired()' data-is-valid='isValid()'></label><div data-ng-class='{ \"col-md-9\": !showTime, \"col-md-5\": showTime}'><input type='date' class='form-control input-sm' data-ng-model='date'></div><div class='col-md-4' data-ng-if='showTime'><input type='time' class='form-control input-sm' data-ng-model='date' /></div></div>")});var AutoImageInputController=function(e,t,a,o){AutoInputController.call(this,e,t),this.select="image.*,image.bucket.url",this.originalData=void 0,this.$q=a,this.APIWrapperService=o,this.$scope.images=[]};AutoImageInputController.prototype=Object.create(AutoInputController.prototype),AutoImageInputController.prototype.constructor=AutoImageInputController,AutoImageInputController.prototype.updateData=function(e){e.image||(e.image=[]),angular.isArray(e.image)||(e.image=[e.image]),this.$scope.images=e.image?e.image:[],this.originalData=e.image&&angular.isArray(e.image)?e.image.slice():[]},AutoImageInputController.prototype.getSaveCalls=function(){var e=[],t=[],a=[];return this.originalData&&this.originalData.length&&this.originalData.forEach(function(e){t.push(e.id)}),this.$scope.images.forEach(function(e){a.push(e.id)}),t.forEach(function(t){-1===a.indexOf(t)&&(e.push({method:"DELETE",url:"image/"+t}),e.push({method:"DELETE",url:"/image/"+t}))}),a.forEach(function(a){-1===t.indexOf(a)&&e.push({method:"POST",url:"image/"+a})}),console.log("AutoImageInput: Calls to be made are %o",e),e},AutoImageInputController.prototype.beforeSaveTasks=function(){for(var e=[],t=0;t<this.$scope.images.length;t++){var a=this.$scope.images[t];a?a.file&&a.file instanceof File&&e.push(this._uploadFile(a)):console.warn("AutoImageInputController: Can't get file property of undefined image %o",a)}return console.log("AutoImageInputController: Upload %o",e),this.$q.all(e)},AutoImageInputController.prototype._uploadFile=function(e){return console.log("AutoImageInputController: Upload file %o to /image through a POST request",e),this.APIWrapperService.request({method:"POST",data:{image:e.file},url:"/image"}).then(function(t){var a=this.$scope.images.indexOf(e);return this.$scope.images.splice(a,1,t),!0}.bind(this),function(e){return this.$q.reject(e)}.bind(this))},angular.module("jb.backofficeAutoFormElement").directive("autoImageInput",[function(){return{require:["autoImageInput","^detailView"],controller:"AutoImageInputController",link:function(e,t,a,o){o[0].init(t,o[1])},templateUrl:"autoImageInputTemplate.html"}}]).controller("AutoImageInputController",AutoImageInputController).run(function(e){e.put("autoImageInputTemplate.html","<div class='row'><label data-backoffice-label data-label-identifier='{{data.name}}' data-is-required='false' data-is-valid='true'></label><div class='col-md-9' data-image-component data-images='images'></div></div>")});var AutoLanguageInputController=function(e,t){var a=!0;AutoInputController.call(this,e,t),this.select=this.$scope.optionData.tableName+".*",console.log("AutoLanguageInputController: select is %o",this.select),this.originalData=void 0,this.$scope.locales={},e.fields=e.$eval(this.$scope.originalAttributes.fields),e.tableName=this.$scope.optionData.tableName,this.$scope.$on("dataUpdate",function(e,t){var a=t[this.$scope.optionData.tableName];this.setData(a)}.bind(this)),this.isValid=function(){return a},e.isValid=this.isValid,e.setValidity=function(e){a=e}};AutoLanguageInputController.prototype=Object.create(AutoInputController.prototype),AutoLanguageInputController.prototype.constructor=AutoLanguageInputController,AutoLanguageInputController.prototype.getSaveCalls=function(){var e=[];for(var t in this.$scope.locales){var a=(this.$scope.locales[t],t),o="language/"+a;if(this.originalData&&this.originalData[a]){for(var n={},i=!1,l=0;l<this.$scope.fields.length;l++){var r=this.$scope.fields[l];this.$scope.locales[t][r]!==this.originalData[t][r]&&(n[r]=this.$scope.locales[t][r],i=!0)}if(i){var s=this.originalData[a]?"PATCH":"POST";e.push({method:s,data:n,url:o})}}else e.push({method:"POST",url:o,data:this.$scope.locales[a]})}return e},AutoLanguageInputController.prototype.updateData=function(e){if(console.log("AutoLanguageInput: updateData got %o for tableName %o",e,e[this.$scope.optionData.tableName]),e){var t=e[this.$scope.optionData.tableName];if(!t||!angular.isArray(t))return void console.error("AutoLanguageInput: data missing for locale. Key is %o, data is %o",this.$scope.optionData.tableName,e);t.forEach(function(e){var t=e.id_language;this.$scope.locales[t]||(this.$scope.locales[t]={});for(var a in e)"id_"!==a.substring(0,3)&&(this.$scope.locales[t][a]=e[a])}.bind(this)),this.originalData=angular.copy(this.$scope.locales)}},angular.module("jb.backofficeAutoFormElement").directive("autoLanguageInput",[function(){return{require:["autoLanguageInput","^detailView"],controller:"AutoLanguageInputController",link:function(e,t,a,o){o[0].init(t,o[1])},templateUrl:"autoLanguageInputTemplate.html"}}]).controller("AutoLanguageInputController",AutoLanguageInputController).run(function(e){e.put("autoLanguageInputTemplate.html","<div class='row'><label data-backoffice-label data-label-identifier='{{data.name}}' data-is-required='false' data-is-valid='isValid()'></label><div data-locale-component class='col-md-9' data-fields='fields' data-table-name='tableName' data-model='locales' data-set-validity='setValidity(validity)' data-entity-name='entityName'></div></div>")});var AutoRelationInputController=function(e,t,a,o,n){AutoInputController.call(this,e,t),this.$templateCache=a,this.$compile=o;var i=this.$scope.originalAttributes.suggestionTemplate,l=n.extractSelectFields(i);this.select=[],l.forEach(function(e){this.select.push(this.$scope.originalAttributes["for"]+"."+e)}.bind(this)),console.log("AutoRelationInputController: select is %o",this.select),this.scope=this.$scope.$new(),this.scope.data=this.$scope.data,this.originalData=void 0,this.isMultiSelect="single"!==this.$scope.optionData.relationType,e.isValid=function(){return!e.optionData.required||this.scope.relations&&0!==this.scope.relations.length?!0:!1}.bind(this),this.scope.relations=[]};AutoRelationInputController.prototype=Object.create(AutoInputController.prototype),AutoRelationInputController.prototype.constructor=AutoRelationInputController,AutoRelationInputController.prototype.updateData=function(e){return this.scope.relations=[],e[this.$attrs["for"]]?(this.isMultiSelect?this.scope.relations=e[this.$attrs["for"]]:this.scope.relations.push(e[this.$attrs["for"]]),this.originalData=this.scope.relations.slice(),void console.log("AutoRelationInput: scope.data is %o",this.scope.relations)):void console.warn("No data provided for %o",this.$attrs["for"])},AutoRelationInputController.prototype.getSaveCalls=function(){var e;return e=this.isMultiSelect?this.getMultiSelectSaveCalls():this.getSingleSelectSaveCalls(),console.log("AutoRelationInputController: saveCalls are %o",e),e},AutoRelationInputController.prototype.getSingleSelectSaveCalls=function(){if(!this.scope.relations)return console.log("AutoRelationInputController: relations empty"),!1;if(0===this.scope.relations.length&&this.originalData&&0!==this.originalData.length)return{url:this.$attrs["for"]+"/"+this.originalData[0].id,method:"DELETE"};if(this.scope.relations.length&&(!this.originalData||this.originalData.length&&this.scope.relations[0].id!==this.originalData[0].id)){var e={};return e[this.$scope.optionData.relationKey]=this.scope.relations[0].id,{url:this.$attrs["for"]+"/"+this.scope.relations[0].id,method:"POST"}}return!1},AutoRelationInputController.prototype.getMultiSelectSaveCalls=function(){var e=[],t=[],a=[],o=[],n=[];return this.scope.relations&&this.scope.relations.length&&this.scope.relations.forEach(function(e){o.push(e.id)}),this.originalData&&this.originalData.length&&this.originalData.forEach(function(e){a.push(e.id)}),a.forEach(function(t){-1===o.indexOf(t)&&(e.push(t),n.push({method:"DELETE",url:this.$attrs["for"]+"/"+t}))}.bind(this)),o.forEach(function(e){-1===a.indexOf(e)&&(t.push(e),n.push({method:"POST",url:this.$attrs["for"]+"/"+e}))}.bind(this)),console.log("AutoRelationInput: Added %o, deleted %o – calls: %o",t,e,n),0===n.length?!1:n},AutoRelationInputController.prototype.afterInit=function(){var e=$(this.$templateCache.get("autoRelationInputTemplate.html"));e.find("[data-relation-input]").attr("data-relation-entity-endpoint",this.$scope.optionData.relation).attr("data-relation-interactive",!0).attr("data-relation-entity-search-field",this.$scope.originalAttributes.suggestionSearchField).attr("data-relation-suggestion-template",this.$scope.originalAttributes.suggestionTemplate).attr("data-multi-select",this.isMultiSelect),this.element.append(e),this.$compile(e)(this.scope)},angular.module("jb.backofficeAutoFormElement").directive("autoRelationInput",[function(){return{require:["autoRelationInput","^detailView"],controller:"AutoRelationInputController",link:function(e,t,a,o){o[0].init(t,o[1])},scope:!0}}]).controller("AutoRelationInputController",AutoRelationInputController).run(function(e){e.put("autoRelationInputTemplate.html","<div class='form-group'><label data-backoffice-label data-label-identifier='{{data.name}}' data-is-valid='isValid()'></label><div data-relation-input class='relation-select col-md-9'data-ng-model='relations'data-deletable='optionData.originalRelation != \"belongsTo\"'></div></div>")});var AutoTextInputController=function(e,t){AutoInputController.call(this,e,t),this.select=this.$scope.data.name,e.isValid=function(){return this.$scope.optionData.required&&!this.$scope.data.value?!1:!0}.bind(this)};AutoTextInputController.prototype=Object.create(AutoInputController.prototype),AutoTextInputController.prototype.constructor=AutoTextInputController,AutoTextInputController.prototype.updateData=function(e){this.originalData=this.$scope.data.value=e[this.$attrs["for"]]},AutoTextInputController.prototype.getSaveCalls=function(){if(this.originalData===this.$scope.data.value)return!1;var e={};return e[this.$scope.data.name]=this.$scope.data.value,console.error(this.detailViewController.getEntityId()),{url:"",data:e,method:this.detailViewController.getEntityId()||0===this.detailViewController.getEntityId()?"PATCH":"POST"}},angular.module("jb.backofficeAutoFormElement").controller("AutoTextInputController",AutoTextInputController).directive("autoTextInput",[function(){return{link:function(e,t,a,o){o[1].init(t,o[0])},controller:"AutoTextInputController",require:["^detailView","autoTextInput"],templateUrl:"autoTextInputTemplate.html"}}]).run(function(e){e.put("autoTextInputTemplate.html","<div class='form-group form-group-sm'><label data-backoffice-label data-label-identifier='{{data.name}}' data-is-valid='isValid()'></label><div class='col-md-9'><input type='text' data-ng-attr-id='{{ entityName }}-{{ data.name }}-label' class='form-control input-sm' data-ng-attrs-required='isRequired()' data-ng-model='data.value'/></div></div>")}),function(){angular.module("jb.backofficeFormComponents").directive("backofficeRelationComponent",[function(){return{require:["backofficeRelationComponent","^detailView"],controller:"BackofficeRelationComponentController",controllerAs:"backofficeRelationComponent",bindToController:!0,link:function(e,t,a,o){o[0].init(t,o[1])},scope:{suggestionTemplate:"@",searchField:"@",propertyName:"@for",relationModel:"=ngModel"}}}]).controller("BackofficeRelationComponentController",["$scope","$compile","$templateCache","RelationInputService",function(e,t,a,o){var n,i,l,r,s,d,c=this;c.relationModel=void 0,c.init=function(e,t){n=e,i=t,i.registerOptionsDataHandler(c.updateOptionsData),i.registerGetDataHandler(c.updateData)},c.updateData=function(e){var t=angular.isArray(e[c.propertyName])?e[c.propertyName]:[e[c.propertyName]];c.relationModel=t,d=angular.copy(t),console.log("BackofficeRelationComponentController: Model updated (updateData) to %o",c.relationModel)},c.updateOptionsData=function(e){console.log("BackofficeRelationComponentController: Got options data %o",e[c.propertyName]);var t=e[c.propertyName];r="belongsTo"!==t.originalRelation,l=t.required,s="single"!==t.relationType,c.replaceElement(s,r),i.register(c)},c.getSelectFields=function(){var e=o.extractSelectFields(c.suggestionTemplate),t=[];return e.forEach(function(e){t.push(c.propertyName+"."+e)}),t},c.replaceElement=function(o,i){var l=$(a.get("backofficeRelationComponentTemplate.html"));l.find("[data-relation-input]").attr("data-relation-entity-endpoint",c.propertyName).attr("data-relation-interactive",!0).attr("data-deletable",i).attr("data-relation-entity-search-field",c.searchField).attr("data-relation-suggestion-template",c.suggestionTemplate).attr("data-ng-model","backofficeRelationComponent.relationModel").attr("data-multi-select",o).attr("data-deletable",i),n.replaceWith(l),t(l)(e)},c.isRequired=function(){return l},c.isValid=function(){var e=!(l&&!(l&&c.relationModel&&c.relationModel.length));return console.log("BackofficeRelationComponentController: isValid? %o",e),e},c.getSaveCalls=function(){var e=s?c.getMultiSelectSaveCalls():c.getSingleSelectSaveCalls();return console.log("BackofficeRelationComponentController: saveCalls are %o",e),e},c.getSingleSelectSaveCalls=function(){if(!c.relationModel)return console.log("AutoRelationInputController: relationModel empty"),!1;if(l){var e={};return e["id_"+c.propertyName]=c.relationModel[0].id,i.getEntityId()?{url:!1,method:"PATCH",data:e}:{url:!1,method:"POST",data:e}}if(0===c.relationModel.length&&d&&0!==d.length)return{url:c.propertyName+"/"+d[0].id,method:"DELETE"};if(c.relationModel.length&&(!d||d.length&&c.relationModel[0].id!==d[0].id)){var t={};return t[i.fields[c.propertyName].relationKey]=c.relationModel[0].id,{url:c.propertyName+"/"+c.relationModel[0].id,method:"POST"}}return!1},c.getMultiSelectSaveCalls=function(){var e=[],t=[],a=[],o=[],n=[];return c.relationModel&&c.relationModel.length&&c.relationModel.forEach(function(e){o.push(e.id)}),d&&d.length&&d.forEach(function(e){a.push(e.id)}),a.forEach(function(t){-1===o.indexOf(t)&&(e.push(t),n.push({method:"DELETE",url:c.propertyName+"/"+t}))}.bind(this)),o.forEach(function(e){-1===a.indexOf(e)&&(t.push(e),n.push({method:"POST",url:c.propertyName+"/"+e}))}.bind(this)),console.log("BackofficeRelationComponentController: Added %o, deleted %o – calls: %o",t,e,n),0===n.length?!1:n}}]).run(function(e){e.put("backofficeRelationComponentTemplate.html","<div class='form-group'><label data-backoffice-label data-label-identifier='{{backofficeRelationComponent.propertyName}}' data-is-required='backofficeRelationComponent.isRequired()' data-is-valid='backofficeRelationComponent.isValid()'></label><div data-relation-input class='relation-select col-md-9'></div></div>")})}(),angular.module("jb.backofficeFormComponents").directive("backofficeTreeComponent",[function(){return{require:["^detailView","backofficeTreeComponent"],controller:"TreeComponentController",link:function(e,t,a,o){o[1].init(t,o[0])},templateUrl:"treeTemplate.html",scope:{filter:"=treeComponentFilter",labelName:"@treeComponentLabel",entityName:"@for",maxDepth:"@"},bindToController:!0,controllerAs:"treeComponentController"}}]).controller("TreeComponentController",["$scope","$rootScope","$attrs","$location","$q","APIWrapperService",function(e,t,a,o,n,i){{var l,r,s=this;a.maxDepth||10}s.dataTree=void 0,s.labelName&&s.entityName||console.warn("TreeComponentController: labelName or entityName (for) attribute missing"),s.editEntity=function(e,t){e.preventDefault(),o.path("/"+a["for"]+"/"+t)},s.init=function(e,t){l=e,r=t,r.register(s),s.getData()},s.getData=function(){var e={range:"0-0"};if(s.filter){var a="";for(var o in s.filter)a=o+"="+s.filter[o];e.filter=a}i.request({method:"GET",url:"/"+s.entityName,headers:e}).then(function(e){s.updateData(e)},function(e){t.$broadcast("notification",{type:"error",message:"web.backoffice.detail.loadingError",variables:{errorMessage:e}})})},s.updateData=function(e){s.dataTree=d(e),console.log("TreeComponentController: dataTree is %o",s.dataTree),setTimeout(function(){l.addClass("dd"),l.nestable({dragClass:"dd-dragelement",placeClass:"dd-placeholder",maxDepth:s.maxDepth})},500)},s.getSaveCalls=function(){var e=l.nestable("serialize");console.log("TreeComponentController: Store data %o",e);var t=s.cleanTreeData(e);return console.log("TreeComponentController: Cleaned data %o, got %o",e,t),{method:"POST",headers:{"Content-Type":"application/json"},url:"/"+s.entityName,data:t}},s.cleanTreeData=function(e,t){t||(t=[]);for(var a in e){var o=e[a],n={};if(n.id=o.id,s.filter)for(var i in s.filter)n[i]=s.filter[i];o.children&&(n.children=[],s.cleanTreeData(o.children,n.children)),t.push(n)}return t};var d=function(e){var t={};return e.sort(function(e,t){return e.left-t.left}),c(t,e),t.children},c=function(e,t){var a,o="right",n=0,i=[];e.children||(e.children=[]),t.forEach(function(t){t[o]>n?(n=t[o],i=[],e.children.push(t),a=t):t[o]+1===n?(i.push(t),c(a,i)):i.push(t)})}}]).run(function(e){e.put("treeBranchTemplate.html","<div class='dd-handle'><span data-ng-if='branch[ treeComponentController.labelName ]'>{{ branch[ treeComponentController.labelName ] }}</span><span data-ng-if='!branch[ treeComponentController.labelName ]'>N/A</span></div><button class='fa fa-pencil btn btn-link edit' data-ng-click='treeComponentController.editEntity($event,branch.id)'></button><ol data-ng-if='branch.children' class='dd-list'><li data-ng-repeat='branch in branch.children' data-ng-include='\"treeBranchTemplate.html\"' class='dd-item' data-id='{{ branch.id }}'></li></ol>"),e.put("treeTemplate.html","<ol><li data-ng-repeat='branch in treeComponentController.dataTree' data-ng-include='\"treeBranchTemplate.html\"' class='dd-item' data-id='{{ branch.id }}'></li></ol>")}),angular.module("jb.backofficeAutoFormElement").directive("backofficeLabel",["$templateCache","$compile",function(e,t){return{link:function(a,o,n,i){var l=a.$new(),r=$(e.get("backofficeLabelTemplate.html"));l.valid=!0,l.required=l.name=l.entityName=void 0,a.entityName=i[0].getEntityName(),a.$watch("data",function(e){return e?(l.valid=e.valid,l.name=e.name,void console.log("backofficeLabel: Updated data %o",e)):void(l.valid=l.name=void 0)},!0),a.$watch("entityName",function(e){l.entityName=e}),a.$watch("optionData.required",function(e){l.required=e}),o.replaceWith(r),t(r)(l)},require:["^detailView"],scope:{labelIdentifier:"@",isRequired:"&",isValid:"&"}}}]).run(function(e){e.put("backofficeLabelTemplate.html","<label class='control-label col-md-3' data-ng-class='{invalid: !isValid()}'>{{checkValidity()}}<span data-ng-if='isRequired()||required' class='required-indicator '>*</span><span data-translate='web.backoffice.{{ entityName }}.{{ labelIdentifier }}'></span></label>")}),angular.module("jb.backofficeDetailView",["eb.apiWrapper","ebBackofficeConfig"]).directive("detailView",[function(){return{link:function(e,t,a,o){o[0].init(t),e.detailViewController=o[0]},controller:"DetailViewController",scope:!0,require:["detailView"]}}]).controller("DetailViewController",["$scope","$rootScope","$location","$q","$attrs","$filter","APIWrapperService","BackofficeConfig",function(e,t,a,o,n,i,l,r){var s,d=(e.$new(),this),c=0,u=[],p=[];d.registeredComponents=[],d.fields=void 0,d.data=void 0,e.entityId=void 0,e.entityName=void 0,e.title=void 0,d.parseUrl=function(){var e=a.path(),t=e.split("/"),o={name:void 0,id:void 0};if(t.length<2)return o;if(t.length>=2&&(o.name=t[1]),t.length>=3){var n=parseInt(t[2],10);isNaN(n)||(o.id=n)}return o},e.entityId=d.parseUrl().id,n.$observe("entityId",function(t){e.entityId=t}),d.getEntityId=function(){return e.entityId},e.entityName=d.parseUrl().name,d.getEntityName=function(){return e.entityName},n.$observe("entityName",function(t){e.entityName=t}),n.entityName&&(e.entityName=n.entityName),d.getEntityUrl=function(){var e="/"+d.getEntityName();return d.getEntityId()&&(e+="/"+d.getEntityId()),e},d.setTitle=function(){e.title=a.path().indexOf("/new")===a.path().length-4?i("translate")("web.backoffice.create")+": ":i("translate")("web.backoffice.edit")+": ",e.title+=d.getEntityName(),d.getEntityId()&&(e.title+=" #"+d.getEntityId())},e.$watchGroup(["entityName","entityId"],function(){d.setTitle()}),d.init=function(e){s=e;var t=s.find("[data-auto-form-element], [data-hidden-input], [data-backoffice-tree-component], [data-backoffice-relation-component]","[data-backoffice-component]");t.each(function(){var e=$(this).closest("[data-detail-view]");e.get(0)===s.get(0)&&c++}),n.hasOwnProperty("entityId")?n.$observe("entityId",function(){d.getOptionData()}):d.getOptionData()},d.getOptionData=function(){console.log("DetailView: Make OPTIONS call for %o",d.getEntityName()),d.makeOptionRequest("/"+d.getEntityName()).then(function(e){d.fields=e;var t=u.slice(0);t.forEach(function(t){t(e)}),c===d.registeredComponents.length&&d.getData()},function(e){t.$broadcast("notification",{type:"error",message:"web.backoffice.detail.optionsLoadingError",variables:{errorMessage:e}})})},d.registerOptionsDataHandler=function(e){u.push(e)},d.removeOptionsDataHandler=function(e){u.splice(u.indexOf(e),1)},d.makeOptionRequest=function(e){return l.request({method:"OPTIONS",url:e}).then(function(t){return console.log("DetailView: Got OPTIONS data for %o %o",e,t),d.fields=d.parseOptionData(t),d.fields},function(e){return o.reject(e)})},d.parseOptionData=function(e){var t={};console.log("DetailView: parse %o",e);for(var a in e){var o=e[a];if(o.name&&"string"===o.type&&(t[o.name]={type:"text",required:!o.nullable}),o.name&&"decimal"===o.type&&(t[o.name]={type:"number",required:!o.nullable}),o.name&&"boolean"===o.type&&(t[o.name]={type:"boolean",required:!o.nullable}),o.name&&"datetime"===o.type&&(t[o.name]={type:"datetime",date:!0,time:!0,required:!o.nullable}),o.name&&"date"===o.type)t[o.name]={type:"datetime",date:!0,time:!1,required:!o.nullable};else if("hasOne"===a)for(var n in o)t[n]="image"===o[n].name?{type:"image"}:{type:"relation",relation:o[n]._rel.collection,relationType:"single",required:!o[n].nullable,originalRelation:"hasOne",relationKey:o[n].key};else if("hasMany"===a)for(var i in o)t[i]="language"===o[i].name?{type:"language",tableName:o[i].table.name}:"image"===o[i].name?{type:"image",tableName:o[i].table.name}:{type:"relation",relation:o[i]._rel.collection,relationType:"multiple",originalRelation:"hasMany"};else if("belongsTo"===a)for(var l in o){var r=o[l]._rel?o[l]._rel.collection:!1;t[l]={type:"relation",relation:r,relationType:"multiple",required:!1,originalRelation:"belongsTo"}}}return console.log("DetailView: parsed options are %o",t),t},d.register=function(e){if(d.registeredComponents.push(e),d.registeredComponents.length===c){if(console.log("DetailView: all elements registered (%o). Get data.",d.registeredComponents),!d.getEntityId())return void console.log("New mode (no id provided); don't get data");d.getData()}},d.getData=function(){d.makeGetRequest().then(function(e){d.data=e,d.distributeData(e)},function(e){t.$broadcast("notification",{type:"error",message:"web.backoffice.detail.loadingError",variables:{errorMessage:e}})})},d.registerGetDataHandler=function(e){p.push(e)},d.getSelectParameters=function(){for(var e=[],t=0;t<d.registeredComponents.length;t++){var a=d.registeredComponents[t];a.getSelectFields&&angular.isFunction(a.getSelectFields)?e=e.concat(a.getSelectFields()):a.select&&(e=e.concat(a.select))}return console.log("DetailView %o: getSelectParameters returns %o",d.getEntityName(),e),e},d.distributeData=function(t){e.$emit("dataUpdate",{entity:d.getEntityName(),data:t}),p.forEach(function(e){e(t)})},d.updateData=function(){return d.makeGetRequest().then(function(e){return d.distributeData(e),e},function(e){return t.$broadcast("notification",{type:"error",message:"web.backoffice.detail.saveError",variables:{errorMessage:e}}),o.reject(e)})},d.makeGetRequest=function(){var e=d.getEntityUrl(),t=d.getSelectParameters();return console.log("DetailView: Get Data from %o with select %o",e,t),l.request({url:e,headers:{select:t},method:"GET"}).then(function(e){return e}.bind(this),function(e){return o.reject(e)})},e.save=function(e,n,i){return n&&angular.isFunction(n.preventDefault)&&n.preventDefault(),d.makeSaveRequest(d.registeredComponents,d.getEntityName()).then(function(){return a.path().indexOf("/new")!==a.path().length-4||e||a.path("/"+d.getEntityName()+"/"+d.getEntityId()),e?console.log("DetailViewController: Don't show any message or redirect"):(console.log("DetailViewController: Show success message on %o",t),t.$broadcast("notification",{type:"success",message:"web.backoffice.detail.saveSuccess"})),d.updateData(),i&&i(),!0},function(e){return t.$broadcast("notification",{type:"error",message:"web.backoffice.detail.saveError",variables:{errorMessage:e.message}}),i&&i(),o.reject(e)})},d.makeSaveRequest=function(){for(var e=0;e<d.registeredComponents.length;e++)if(angular.isFunction(d.registeredComponents[e].isValid)&&!d.registeredComponents[e].isValid())return o.reject(new Error("Not all required fields filled out."));return d.executePreSaveTasks().then(function(){return d.makeMainSaveCall()},function(e){return o.reject(e)})},d.executePreSaveTasks=function(){for(var e=[],t=0;t<d.registeredComponents.length;t++){var a=d.registeredComponents[t];a.beforeSaveTasks&&angular.isFunction(a.beforeSaveTasks)&&e.push(a.beforeSaveTasks())}return console.log("DetailView: executePreSaveTasks has %o tasks",e.length),o.all(e)},d.makeMainSaveCall=function(){var t=d.generateSaveCalls();console.log("DetailView: Save calls are %o",t);for(var a,n=[],i=0;i<t.length;i++)t[i].url!=="/"+d.getEntityName()&&t[i].url?n.push(t[i]):a=t[i];return a||d.getEntityId()||(a={method:"POST",url:"/"+d.getEntityName()}),console.log("DetailView: Main save call is %o, other calls are %o",a,n),d.executeSaveRequest(a).then(function(t){console.log("DetailView: Made main save call; got back %o",t),t&&t.id&&(e.entityId=t.id);var a=[];return n.forEach(function(e){a.push(d.executeSaveRequest(e))}),o.all(a)},function(e){return o.reject(e)})},d.addCall=function(e,t){e.method||(e.method=/\/\d*\/?$/.test(e.url)?"PATCH":"POST");var a=this.getSaveCall(t,e.method,e.url);if(e.hasOwnProperty("headers")&&(a=!1),a){if(e.data)for(var o in e.data)a.data[o]=e.data[o]}else a={method:e.method,url:e.url,data:e.data,headers:e.headers||{}},t.push(a)},d.getSaveCall=function(e,t,a){var o=!1;return e.some(function(e){var n=e.url===a||!e.url&&!a,i=e.method.toLowerCase()===t.toLowerCase();return i&&n?(o=e,!0):void 0}),o},d.executeSaveRequest=function(e){if(!e){console.log("DetailView: No call to be made");var t=o.defer();return t.resolve(),t.promise}var a;return e.url&&0===e.url.indexOf("/")?a=e.url:(a="/"+d.getEntityName(),d.getEntityId()&&(a+="/"+d.getEntityId()),e.url&&(a+="/"+e.url)),console.log("DetailView: Make %s call to %s with %o. Call is %o, entityName is %o.",e.method,a,e.data,e,d.getEntityName()),e.data||(e.data={}),e.data.id_dataSource=r.dataSourceId,l.request({url:a,data:e.data,method:e.method,headers:e.headers})
},d.generateSaveCalls=function(){var e=[];console.log("DetailView: Generate calls for %o registered components",d.registeredComponents.length);for(var t=0;t<d.registeredComponents.length;t++){var a=d.registeredComponents[t];if(a.getSaveCalls&&angular.isFunction(a.getSaveCalls)){var o=a.getSaveCalls();o!==!1?(angular.isArray(o)||(o=[o]),console.log("DetailView: componentCalls are %o for %o",o,a),o.forEach(function(t){d.addCall(t,e)})):console.log("DetailView: No save calls for %o",a)}else console.error("DetailView: Missing getSaveCalls on component %o",a[t])}return console.log("DetailView: calls are %o",e),e},e["delete"]=function(e){return console.log("DetailView: Delete"),d.makeDeleteRequest().then(function(){return e||(a.path("/"+d.getEntityName()),t.$broadcast("notification",{type:"success",message:"web.backoffice.detail.deleteSuccess"})),!0},function(a){return e||t.$broadcast("notification",{type:"error",message:"web.backoffice.detail.deleteError",variables:{errorMessage:a}}),o.reject(a)})},d.makeDeleteRequest=function(){return console.log("DetailView: Make DELETE request"),l.request({url:"/"+d.getEntityName()+"/"+d.getEntityId(),method:"DELETE"})}}]),angular.module("jb.backofficeDetailView").controller("DetailViewLoaderController",["$scope","$location","$http","$q","$compile",function(e,t,a,o,n){var i=this,l=t.path(),r=l.split("/");if(!r.length)return void alert("no path provided");var s=r[1],d=r[2];console.log("DetailViewLoader: entity name is %o, id %o",s,d),i.getControllerAndTemplate=function(e,t){if(!e)return!1;var a,o,n=e.replace(/[A-Z]/g,function(e){return"-"+e.toLowerCase()}),i="src/app/"+n+"/";return t?"new"!==t&&isNaN(parseInt(t,10))?console.error("unknown entity id: %o",t):a=i+n+"-detail.tpl.html":(o="ebBackoffice"+e.substring(0,1).toUpperCase()+e.substring(1)+"ListCtrl",a=i+n+"-list.tpl.html"),{controllerName:o,templateUrl:a}},i.getTemplate=function(e){return a({method:"GET",url:e,headers:{accept:"text/html"}}).then(function(e){return console.log("DetailViewLoader: got template %o",e),e.data},function(e){return o.reject(e)})},i.renderTemplate=function(t,a){var o=$("[ng-view], [data-ng-view]"),i=$("<div></div>");a&&i.attr("data-ng-controller",a),i.html(t),console.log("DetailViewLoader: render Template %o with controller %o",i,a),o.empty().append(i),n(i)(e)},i.init=function(){var e=i.getControllerAndTemplate(s,d);if(!e)return void i.renderTemplate("404 – Page could not be found",!1);var t=e.templateUrl,a=e.controllerName;i.getTemplate(t).then(function(e){i.renderTemplate(e,a)},function(){var e=$("[ng-view], [data-ng-view]");e.text("Template "+t+" not found. Entity can't be edited")})},i.init()}]),angular.module("jb.backofficeHiddenInput",[]).directive("hiddenInput",[function(){return{require:["hiddenInput","^detailView"],controller:"HiddenInputController",link:function(e,t,a,o){o[0].init(t,o[1])},scope:!0}}]).controller("HiddenInputController",["$scope","$attrs",function(e,t){var a,o,n=this;n.init=function(e,t){a=e,o=t,o.register(n)},n.isValid=function(){return console.log("HiddenInputController: isValid? yes."),!0},console.log("HiddenInput: for is %o, read %o (hasProperty %o) evals to %o",t["for"],t.read,t.hasOwnProperty("read"),e.$parent.$eval(t.read)),(!t.hasOwnProperty("read")||e.$parent.$eval(t.read))&&(n.select=t["for"],console.log("HiddenInput: select is %o",n.select)),n.getSaveCalls=function(){var a=!t.hasOwnProperty("write")||e.$parent.$eval(t.write);if(console.log("HiddenInput: Get save calls; $attrs.data is %o, writeData is %o, data-write is %o and evals to %o",t.data,a,t.write,e.$parent.$eval(t.write)),a&&t.data){var n=t["for"]&&t["for"].indexOf(".")>-1;if(n){var i=t["for"].substring(0,t["for"].lastIndexOf(".")),l=i+"/"+t.data;return console.log("HiddenInput: Store relation %o",l),{url:l,method:"POST"}}var r={};return r[t["for"]]=t.data,console.log("HiddenInput: Store data %o",r),{url:"",data:r,method:o.getEntityId()?"PATCH":"POST"}}return!1}}]),angular.module("jb.imageComponent",[]).directive("imageComponent",[function(){return{link:function(e,t,a,o){o.init(t)},controller:"ImageComponentController",scope:{images:"="},templateUrl:"imageComponentTemplate.html"}}]).controller("ImageComponentController",["$scope","$rootScope",function(e,t){function a(){s.find("input[type='file']").change(function(e){l(e.target.files)})}function o(){s.bind("drop",function(e){e.preventDefault();var t=e.originalEvent.dataTransfer.files;return l(t),!1}).bind("dragover",n).bind("dragenter",n)}function n(e){return e.preventDefault(),e.originalEvent.dataTransfer.effectAllowed="copy",!1}function i(e){var t=["image/jpeg"];return-1===t.indexOf(e.type)?!1:!0}function l(a){for(var o=[],n=a.length-1;n>=0;n--)i(a[n])?o.push(a[n]):e.$apply(function(){t.$broadcast("notification",{type:"error",message:"web.backoffice.detail.imageTypeNotSupported",variables:{fileName:a[n].name,fileType:a[n].type}})});for(var l=0;l<o.length;l++)!function(){var e=o[l],t=new FileReader;t.onload=function(t){r(t.target.result,e)},t.readAsDataURL(e)}()}function r(t,a){e.$apply(function(){e.images.push({file:a,fileData:t})})}var s,d=this;d.init=function(e){s=e,d.addEventListeners()},e.active=void 0,e.toggleActive=function(t){return t===e.active?void(e.active=void 0):void(e.active=t)},e.addedImages=[],e.removeImage=function(t,a){t.stopPropagation(),t.preventDefault(),e.images.splice(e.images.indexOf(a),1)},d.addEventListeners=function(){o(),a()},e.showFileSelectDialog=function(e){e.preventDefault(),s.find("input[type='file']").click()}}]).run(function(e){e.put("imageComponentTemplate.html","<ul class='clearfix image-component'><li><button class='add' data-ng-click='showFileSelectDialog($event)'>{{ 'web.backoffice.detail.imageDropZone' | translate }}</button><input type='file' multiple/></li><li data-ng-repeat='image in images' data-ng-click='toggleActive(image)' data-ng-class='{active: active===image}'><img data-ng-attr-src='{{image.fileData}}' data-ng-if='image.fileData'/><img data-ng-attr-src='{{image.bucket.url}}{{image.url}}' data-ng-if='image.url'/><button class='remove' data-ng-click='removeImage($event,image)'>&times</button></li></ul>")}),angular.module("jb.localeComponent",["eb.apiWrapper"]).directive("localeComponent",[function(){return{link:function(e,t,a,o){o[0].init(t,o[1])},controller:"LocaleComponentController",require:["localeComponent"],templateUrl:"localeComponentTemplate.html",scope:{fields:"=",model:"=",entityName:"=",tableName:"=",setValidity:"&"}}}]).controller("LocaleComponentController",["$scope","APIWrapperService",function(e,t){var a,o=this;e.languages=[],e.selectedLanguages=[],e.fieldDefinitions=[],o.init=function(e){a=e,setTimeout(function(){o.adjustHeightOfAllAreas()},1e3),o.setupFieldDefinitionWatcher(),o.setupValidityWatcher(),o.setupSelectedLanguagesWatcher()},o.setupSelectedLanguagesWatcher=function(){e.$watch("selectedLanguages",function(e){if(0!==e.length){var t=Math.floor(100/e.length)+"%";a.find(".locale-col").css("width",t)}},!0)},o.setupValidityWatcher=function(){e.$watch("model",function(t){if(e.setValidity&&angular.isFunction(e.setValidity)){if(!angular.isObject(t)||!Object.keys(t))return void e.setValidity({validity:!0});var a=o.getRequiredFields(),n=!0;Object.keys(t).forEach(function(e){var o=t[e],i=Object.keys(o);console.log("LocaleComponentController: used fields %o, required %o in %o",i,a,o),a.some(function(e){-1===i.indexOf(e)&&(n=!1,console.log("LocaleComponentController: Required field %o missing in %o",e,o))})}),e.setValidity({validity:n})}},!0)},o.isFieldValid=function(t,a){var n=(o.getRequiredFields(),e.model[t]);return n&&angular.isObject(n)?n[a]||""===n[a]?!0:!1:!0},e.isFieldValid=function(e,t){return o.isFieldValid(e,t)},o.getRequiredFields=function(){var t=[];return e.fieldDefinitions.forEach(function(e){e.required&&t.push(e.name)}),t},e.adjustHeight=function(e){o.adjustHeight($(e.currentTarget))},o.adjustHeightOfAllAreas=function(){a.find("textarea").each(function(){o.adjustHeight($(this))})},o.adjustHeight=function(e){var t=e,a=$(document.createElement("div")),o=["font-size","font-family","font-weight","lineHeight","width","padding-top","padding-left","padding-right"];o.forEach(function(e){a.css(e,t.css(e))}),a.css("position","relative").css("top","-10000px").text(t.val()).appendTo("body");var n=Math.min(a.height(),200);a.remove(),t.height(Math.max(n,parseInt(t.css("lineHeight"),10)))},o.toggleLanguage=function(t){1===e.selectedLanguages.length&&e.selectedLanguages[0]===t;var a=e.selectedLanguages.indexOf(t);a>-1?e.selectedLanguages.splice(a,1):e.selectedLanguages.push(t),setTimeout(function(){o.adjustHeightOfAllAreas($(this))}.bind(this),100)},e.toggleLanguage=function(e,t){e.preventDefault(),o.toggleLanguage(t)},e.isSelected=function(t){return e.selectedLanguages.indexOf(t)>-1},e.hasTranslation=function(t){if(!e.model[t])return!1;var a=0;for(var o in e.model[t])e.model[t][o]&&a++;return a>0},o.setupFieldDefinitionWatcher=function(){e.$watchGroup(["tableName","fields"],function(){o.getFieldDefinitions()})},o.getFieldDefinitions=function(){return e.fields&&e.tableName?void t.request({url:"/"+e.tableName,method:"OPTIONS"}).then(function(e){o.parseOptionData(e)},function(t){console.error("LocaleComponentController: Could not get OPTION data for table %o: %o",e.tableName,t)}):void console.log("LocaleComponentController: fields or tableName not yet ready")},o.parseOptionData=function(t){console.log("LocaleComponentController: Parse OPTIONS data %o",t),e.fieldDefinitions=[],e.fields.forEach(function(a){e.fieldDefinitions.push({name:a,required:!t[a].nullable,valid:!0})})},o.getLanguages=function(){if(!localStorage||!localStorage.getItem("supportedLanguages"))return void console.error("LocaleComponentController: supportedLanguages cannot be retrieved from localStorage");var t=localStorage.getItem("supportedLanguages");t=JSON.parse(t),t.forEach(function(t){e.languages.push({id:t.id,code:t.code}),0===e.selectedLanguages.length&&o.toggleLanguage(t.id)})},o.getLanguages()}]).run(function(e){e.put("localeComponentTemplate.html","<div class='locale-component'><ul class='nav nav-tabs'><li data-ng-repeat='lang in languages' data-ng-class='{active:isSelected(lang.id)}'><a href='#' data-ng-click='toggleLanguage($event,lang.id)'>{{lang.code|uppercase}} <span data-ng-if='hasTranslation(lang.id)' class='fa fa-check'></span></a></li></ul><div class='locale-content clearfix'><div class='locale-col' data-ng-repeat='lang in languages' data-ng-show='isSelected( lang.id )'><p>{{ lang.code | uppercase }}</p><div data-ng-repeat='fieldDefinition in fieldDefinitions'><label data-ng-attr-for='locale-{{lang.id}}-{{fielDefinition.name}}' data-ng-class='{ \"invalid\": !isFieldValid(lang.id, fieldDefinition.name)}'><span data-translate='web.backoffice.{{entityName}}.{{fieldDefinition.name}}' ></span> <span class='required-indicator'data-ng-show='fieldDefinition.required'>*</span></label><textarea data-ng-model='model[ lang.id ][ fieldDefinition.name ]' data-ng-attr-id='locale-{{lang.id}}-{{fieldDefinition.name}}' class='form-control' data-ng-keyup='adjustHeight( $event )' data-ng-focus='adjustHeight( $event )' /></textarea></div></div></div></div>")}),function(e,t,a,o){function n(t,o){this.w=e(a),this.el=e(t),this.options=e.extend({},r,o),this.init()}var i="ontouchstart"in a,l=function(){var e=a.createElement("div"),o=a.documentElement;if(!("pointerEvents"in e.style))return!1;e.style.pointerEvents="auto",e.style.pointerEvents="x",o.appendChild(e);var n=t.getComputedStyle&&"auto"===t.getComputedStyle(e,"").pointerEvents;return o.removeChild(e),!!n}(),r={listNodeName:"ol",itemNodeName:"li",rootClass:"dd",listClass:"dd-list",itemClass:"dd-item",dragClass:"dd-dragel",handleClass:"dd-handle",collapsedClass:"dd-collapsed",placeClass:"dd-placeholder",noDragClass:"dd-nodrag",emptyClass:"dd-empty",expandBtnHTML:'<button data-action="expand" type="button">Expand</button>',collapseBtnHTML:'<button data-action="collapse" type="button">Collapse</button>',group:0,maxDepth:5,threshold:20};n.prototype={init:function(){var a=this;a.reset(),a.el.data("nestable-group",this.options.group),a.placeEl=e('<div class="'+a.options.placeClass+'"/>'),e.each(this.el.find(a.options.itemNodeName),function(t,o){a.setParent(e(o))}),a.el.on("click","button",function(t){if(!a.dragEl){var o=e(t.currentTarget),n=o.data("action"),i=o.parent(a.options.itemNodeName);"collapse"===n&&a.collapseItem(i),"expand"===n&&a.expandItem(i)}});var o=function(t){var o=e(t.target);if(!o.hasClass(a.options.handleClass)){if(o.closest("."+a.options.noDragClass).length)return;o=o.closest("."+a.options.handleClass)}o.length&&!a.dragEl&&(a.isTouch=/^touch/.test(t.type),a.isTouch&&1!==t.touches.length||(t.preventDefault(),a.dragStart(t.touches?t.touches[0]:t)))},n=function(e){a.dragEl&&(e.preventDefault(),a.dragMove(e.touches?e.touches[0]:e))},l=function(e){a.dragEl&&(e.preventDefault(),a.dragStop(e.touches?e.touches[0]:e))};i&&(a.el[0].addEventListener("touchstart",o,!1),t.addEventListener("touchmove",n,!1),t.addEventListener("touchend",l,!1),t.addEventListener("touchcancel",l,!1)),a.el.on("mousedown",o),a.w.on("mousemove",n),a.w.on("mouseup",l)},serialize:function(){var t,a=0,o=this,n=function(t,a){var i=[],l=t.children(o.options.itemNodeName);return l.each(function(){var t=e(this),l=e.extend({},t.data()),r=t.children(o.options.listNodeName);r.length&&(l.children=n(r,a+1)),i.push(l)}),i};return t=n(o.el.find(o.options.listNodeName).first(),a)},serialise:function(){return this.serialize()},reset:function(){this.mouse={offsetX:0,offsetY:0,startX:0,startY:0,lastX:0,lastY:0,nowX:0,nowY:0,distX:0,distY:0,dirAx:0,dirX:0,dirY:0,lastDirX:0,lastDirY:0,distAxX:0,distAxY:0},this.isTouch=!1,this.moving=!1,this.dragEl=null,this.dragRootEl=null,this.dragDepth=0,this.hasNewRoot=!1,this.pointEl=null},expandItem:function(e){e.removeClass(this.options.collapsedClass),e.children('[data-action="expand"]').hide(),e.children('[data-action="collapse"]').show(),e.children(this.options.listNodeName).show()},collapseItem:function(e){var t=e.children(this.options.listNodeName);t.length&&(e.addClass(this.options.collapsedClass),e.children('[data-action="collapse"]').hide(),e.children('[data-action="expand"]').show(),e.children(this.options.listNodeName).hide())},expandAll:function(){var t=this;t.el.find(t.options.itemNodeName).each(function(){t.expandItem(e(this))})},collapseAll:function(){var t=this;t.el.find(t.options.itemNodeName).each(function(){t.collapseItem(e(this))})},setParent:function(t){t.children(this.options.listNodeName).length&&(t.prepend(e(this.options.expandBtnHTML)),t.prepend(e(this.options.collapseBtnHTML))),t.children('[data-action="expand"]').hide()},unsetParent:function(e){e.removeClass(this.options.collapsedClass),e.children("[data-action]").remove(),e.children(this.options.listNodeName).remove()},dragStart:function(t){var n=this.mouse,i=e(t.target),l=i.closest(this.options.itemNodeName);this.placeEl.css("height",l.height()),n.offsetX=t.offsetX!==o?t.offsetX:t.pageX-i.offset().left,n.offsetY=t.offsetY!==o?t.offsetY:t.pageY-i.offset().top,n.startX=n.lastX=t.pageX,n.startY=n.lastY=t.pageY,this.dragRootEl=this.el,this.dragEl=e(a.createElement(this.options.listNodeName)).addClass(this.options.listClass+" "+this.options.dragClass),this.dragEl.css("width",l.width()),l.after(this.placeEl),l[0].parentNode.removeChild(l[0]),l.appendTo(this.dragEl),e(a.body).append(this.dragEl),this.dragEl.css({left:t.pageX-n.offsetX,top:t.pageY-n.offsetY});var r,s,d=this.dragEl.find(this.options.itemNodeName);for(r=0;r<d.length;r++)s=e(d[r]).parents(this.options.listNodeName).length,s>this.dragDepth&&(this.dragDepth=s)},dragStop:function(){var e=this.dragEl.children(this.options.itemNodeName).first();e[0].parentNode.removeChild(e[0]),this.placeEl.replaceWith(e),this.dragEl.remove(),this.el.trigger("change"),this.hasNewRoot&&this.dragRootEl.trigger("change"),this.reset()},dragMove:function(o){var n,i,r,s,d,c=this.options,u=this.mouse;this.dragEl.css({left:o.pageX-u.offsetX,top:o.pageY-u.offsetY}),u.lastX=u.nowX,u.lastY=u.nowY,u.nowX=o.pageX,u.nowY=o.pageY,u.distX=u.nowX-u.lastX,u.distY=u.nowY-u.lastY,u.lastDirX=u.dirX,u.lastDirY=u.dirY,u.dirX=0===u.distX?0:u.distX>0?1:-1,u.dirY=0===u.distY?0:u.distY>0?1:-1;var p=Math.abs(u.distX)>Math.abs(u.distY)?1:0;if(!u.moving)return u.dirAx=p,void(u.moving=!0);u.dirAx!==p?(u.distAxX=0,u.distAxY=0):(u.distAxX+=Math.abs(u.distX),0!==u.dirX&&u.dirX!==u.lastDirX&&(u.distAxX=0),u.distAxY+=Math.abs(u.distY),0!==u.dirY&&u.dirY!==u.lastDirY&&(u.distAxY=0)),u.dirAx=p,u.dirAx&&u.distAxX>=c.threshold&&(u.distAxX=0,r=this.placeEl.prev(c.itemNodeName),u.distX>0&&r.length&&!r.hasClass(c.collapsedClass)&&(n=r.find(c.listNodeName).last(),d=this.placeEl.parents(c.listNodeName).length,d+this.dragDepth<=c.maxDepth&&(n.length?(n=r.children(c.listNodeName).last(),n.append(this.placeEl)):(n=e("<"+c.listNodeName+"/>").addClass(c.listClass),n.append(this.placeEl),r.append(n),this.setParent(r)))),u.distX<0&&(s=this.placeEl.next(c.itemNodeName),s.length||(i=this.placeEl.parent(),this.placeEl.closest(c.itemNodeName).after(this.placeEl),i.children().length||this.unsetParent(i.parent()))));var f=!1;if(l||(this.dragEl[0].style.visibility="hidden"),this.pointEl=e(a.elementFromPoint(o.pageX-a.body.scrollLeft,o.pageY-(t.pageYOffset||a.documentElement.scrollTop))),l||(this.dragEl[0].style.visibility="visible"),this.pointEl.hasClass(c.handleClass)&&(this.pointEl=this.pointEl.parent(c.itemNodeName)),this.pointEl.hasClass(c.emptyClass))f=!0;else if(!this.pointEl.length||!this.pointEl.hasClass(c.itemClass))return;var g=this.pointEl.closest("."+c.rootClass),h=this.dragRootEl.data("nestable-id")!==g.data("nestable-id");if(!u.dirAx||h||f){if(h&&c.group!==g.data("nestable-group"))return;if(d=this.dragDepth-1+this.pointEl.parents(c.listNodeName).length,d>c.maxDepth)return;var m=o.pageY<this.pointEl.offset().top+this.pointEl.height()/2;i=this.placeEl.parent(),f?(n=e(a.createElement(c.listNodeName)).addClass(c.listClass),n.append(this.placeEl),this.pointEl.replaceWith(n)):m?this.pointEl.before(this.placeEl):this.pointEl.after(this.placeEl),i.children().length||this.unsetParent(i.parent()),this.dragRootEl.find(c.itemNodeName).length||this.dragRootEl.append('<div class="'+c.emptyClass+'"/>'),h&&(this.dragRootEl=g,this.hasNewRoot=this.el[0]!==this.dragRootEl[0])}}},e.fn.nestable=function(t){var a=this,o=this;return a.each(function(){var a=e(this).data("nestable");a?"string"==typeof t&&"function"==typeof a[t]&&(o=a[t]()):(e(this).data("nestable",new n(this,t)),e(this).data("nestable-id",(new Date).getTime()))}),o||a}}(window.jQuery||window.Zepto,window,document);