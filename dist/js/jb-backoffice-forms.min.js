"use strict";var AutoInputController=function(e,t){this.$attrs=t,this.$scope=e,this.$scope.entityName=void 0,this.$scope.entityUrl=void 0,e.data={value:void 0,name:t["for"],valid:!0},this.isValid=function(){return e.data.valid},this.element=void 0,this.detailViewController=void 0};AutoInputController.prototype.init=function(e,t){this.element=e,this.detailViewController=t,this.$scope.entityName=t.getEntityName(),this.$scope.entityId=t.getEntityId(),this.detailViewController.register(this),this.afterInit&&angular.isFunction(this.afterInit)&&this.afterInit(),this.updateData?this.detailViewController.registerGetDataHandler(this.updateData.bind(this)):console.error("AutoInputController: updateData method missing in %o %o",this,e)},angular.module("jb.backofficeAutoFormElement",[]).directive("autoFormElement",["$compile",function(){return{require:["autoFormElement","^detailView"],link:function(e,t,n,a){a[0].init(t,a[1])},controller:"AutoFormElementController",scope:!0}}]).controller("AutoFormElementController",["$scope","$attrs","$compile","$rootScope",function(e,t,n){var a,o,i=e,l=this;l.optionUpdateHandler=function(e){if(!e||!e[r])return void console.error("AutoFormElement: Can't update element, specs for field %o missing in %o",r,e);var t=e[r];l.updateElement(t),o.removeOptionsDataHandler(l.optionUpdateHandler)},l.init=function(e,t){o=t,o.registerOptionsDataHandler(l.optionUpdateHandler),a=e};var r=t["for"];l.updateElement=function(e){var o;if(!e||!e.type)return void console.error("AutoFormElement: fieldSpec %o is missing type",e);switch(e.type){case"text":o="text";break;case"number":o="text";break;case"boolean":o="checkbox";break;case"relation":o="relation";break;case"language":o="language";break;case"image":o="image";break;case"datetime":o="dateTime";break;default:console.error("AutoFormElement: Unknown type %o",e.type)}if(!o)return void console.error("AutoFormElement: elementType missing for element %o",a);console.log("AutoFormElement: Create new %s from %o",o,e);var l=o.replace(/[A-Z]/g,function(e){return"-"+e.toLowerCase()});i.optionData=e,i.originalAttributes=t;var s=$("<div data-auto-"+l+"-input data-for='"+r+"'></div>");a.replaceWith(s),n(s)(i)}}]);var AutoCheckboxInputController=function(e,t){AutoInputController.call(this,e,t),this.select=this.$scope.data.name};AutoCheckboxInputController.prototype=Object.create(AutoInputController.prototype),AutoCheckboxInputController.prototype.constructor=AutoCheckboxInputController,AutoCheckboxInputController.prototype.updateData=function(e){this.originalData=this.$scope.data.value=e[this.$attrs["for"]]},AutoCheckboxInputController.prototype.getSaveCalls=function(){if(this.originalData===this.$scope.data.value)return!1;var e={};return e[this.$scope.data.name]=this.$scope.data.value,console.error(e),{url:"",data:e,method:this.detailViewController.getEntityId()?"PATCH":"POST"}},angular.module("jb.backofficeAutoFormElement").directive("autoCheckboxInput",[function(){return{require:["autoCheckboxInput","^detailView"],controller:"AutoCheckboxInputController",link:function(e,t,n,a){a[0].init(t,a[1])},templateUrl:"autoCheckboxInputTemplate.html"}}]).controller("AutoCheckboxInputController",AutoCheckboxInputController).run(function(e){e.put("autoCheckboxInputTemplate.html","<div class='form-group'><label data-backoffice-label></label><div class='col-md-9'><div class='checkbox'><input type='checkbox' data-ng-model='data.value'/></div></div></div>")});var AutoDateTimeInputController=function(e,t){AutoInputController.call(this,e,t),this.select=t["for"],this.originalData=void 0,this.$scope.date=void 0,e.showTime=this.$scope.optionData.time};AutoDateTimeInputController.prototype=Object.create(AutoInputController.prototype),AutoDateTimeInputController.prototype.constructor=AutoDateTimeInputController,AutoDateTimeInputController.prototype.updateData=function(e){this.$scope.date=new Date(e[this.$attrs["for"]]),this.originalData=this.$scope.date},AutoDateTimeInputController.prototype.getSaveCalls=function(){var e=this.$scope.date;if(!e)return!1;if(e.getTime()===this.originalData.getTime())return!1;var t=e.getFullYear()+"-"+(e.getMonth()+1)+"-"+e.getDate()+" "+e.getHours()+":"+e.getMinutes()+":"+e.getSeconds(),n={};return n[this.$scope.data.name]=t,{url:this.detailViewController.getEntityUrl(),data:n}},angular.module("jb.dateTime",[]).directive("autoDateTimeInput",[function(){return{templateUrl:"dateTimeInputTemplate.html",controller:"AutoDateTimeInputController",require:["autoDateTimeInput","^detailView"],link:function(e,t,n,a){a[0].init(t,a[1])}}}]).controller("AutoDateTimeInputController",AutoDateTimeInputController).run(function(e){e.put("dateTimeInputTemplate.html","<div class='form-group form-group-sm'><label data-backoffice-label></label><div data-ng-class='{ \"col-md-9\": !showTime, \"col-md-5\": showTime}'><input type='date' class='form-control input-sm' data-ng-model='date'></div><div class='col-md-4' data-ng-if='showTime'><input type='time' class='form-control input-sm' data-ng-model='date' /></div></div>")});var AutoImageInputController=function(e,t,n,a){AutoInputController.call(this,e,t),this.select="image.*,image.bucket.url",this.originalData=void 0,this.$q=n,this.APIWrapperService=a,this.$scope.images=[]};AutoImageInputController.prototype=Object.create(AutoInputController.prototype),AutoImageInputController.prototype.constructor=AutoImageInputController,AutoImageInputController.prototype.updateData=function(e){angular.isArray(e.image)||(e.image=[e.image]),this.$scope.images=e.image?e.image:[],this.originalData=e.image&&angular.isArray(e.image)?e.image.slice():[]},AutoImageInputController.prototype.getSaveCalls=function(){var e=[],t=[],n=[];return this.originalData&&this.originalData.length&&this.originalData.forEach(function(e){t.push(e.id)}),this.$scope.images.forEach(function(e){n.push(e.id)}),t.forEach(function(t){-1===n.indexOf(t)&&(e.push({method:"DELETE",url:"image/"+t}),e.push({method:"DELETE",url:"/image/"+t}))}),n.forEach(function(n){-1===t.indexOf(n)&&e.push({method:"POST",url:"image/"+n})}),console.log("AutoImageInput: Calls to be made are %o",e),e},AutoImageInputController.prototype.beforeSaveTasks=function(){for(var e=[],t=0;t<this.$scope.images.length;t++){var n=this.$scope.images[t];n.file&&n.file instanceof File&&e.push(this._uploadFile(n))}return console.log("AutoImageInputController: Upload %o",e),this.$q.all(e)},AutoImageInputController.prototype._uploadFile=function(e){return this.APIWrapperService.request({method:"POST",data:{dataSource:"backoffice",image:e.file},url:"/image"}).then(function(t){var n=this.$scope.images.indexOf(e);return this.$scope.images.splice(n,1,t),!0}.bind(this),function(e){this.$q.reject(e)})},angular.module("jb.backofficeAutoFormElement").directive("autoImageInput",[function(){return{require:["autoImageInput","^detailView"],controller:"AutoImageInputController",link:function(e,t,n,a){a[0].init(t,a[1])},templateUrl:"autoImageInputTemplate.html"}}]).controller("AutoImageInputController",AutoImageInputController).run(function(e){e.put("autoImageInputTemplate.html","<div class='row'><label data-backoffice-label></label><div class='col-md-9' data-image-component data-images='images'></div></div>")});var AutoLanguageInputController=function(e,t){AutoInputController.call(this,e,t),this.select=this.$scope.optionData.tableName+".*",this.originalData=void 0,this.$scope.locales={},e.fields=e.$eval(this.$scope.originalAttributes.fields),this.$scope.$on("dataUpdate",function(e,t){var n=t[this.$scope.optionData.tableName];this.setData(n)}.bind(this))};AutoLanguageInputController.prototype=Object.create(AutoInputController.prototype),AutoLanguageInputController.prototype.constructor=AutoLanguageInputController,AutoLanguageInputController.prototype.getSaveCalls=function(){var e=[];for(var t in this.$scope.locales){var n=(this.$scope.locales[t],t),a="language/"+n;if(this.originalData&&this.originalData[n]){for(var o={},i=!1,l=0;l<this.$scope.fields.length;l++){var r=this.$scope.fields[l];this.$scope.locales[t][r]!==this.originalData[t][r]&&(o[r]=this.$scope.locales[t][r],i=!0)}if(i){var s=this.originalData[n]?"PATCH":"POST";e.push({method:s,data:o,url:a})}}else e.push({method:"POST",url:a,data:this.$scope.locales[n]})}return e},AutoLanguageInputController.prototype.updateData=function(e){if(console.log("AutoLanguageInput: updateData got %o",e),e){var t=e[this.$scope.optionData.tableName];if(!t||!angular.isArray(t))return void console.error("AutoLanguageInput: data missing for locale. Key is %o, data is %o",this.$scope.optionData.tableName,e);t.forEach(function(e){var t=e.id_language;this.$scope.locales[t]||(this.$scope.locales[t]={});for(var n in e)"id_"!==n.substring(0,3)&&(this.$scope.locales[t][n]=e[n])}.bind(this)),this.originalData=angular.copy(this.$scope.locales)}},angular.module("jb.backofficeAutoFormElement").directive("autoLanguageInput",[function(){return{require:["autoLanguageInput","^detailView"],controller:"AutoLanguageInputController",link:function(e,t,n,a){a[0].init(t,a[1])},templateUrl:"autoLanguageInputTemplate.html"}}]).controller("AutoLanguageInputController",AutoLanguageInputController).run(function(e){e.put("autoLanguageInputTemplate.html","<div class='row'><label data-backoffice-label></label><div data-locale-component class='col-md-9' fields='fields' data-model='locales' data-entity-name='entityName'></div></div>")});var AutoRelationInputController=function(e,t,n,a,o){AutoInputController.call(this,e,t),this.$templateCache=n,this.$compile=a;var i=this.$scope.originalAttributes.suggestionTemplate,l=o.extractSelectFields(i);this.select=[],l.forEach(function(e){this.select.push(this.$scope.originalAttributes["for"]+"."+e)}.bind(this)),this.scope=this.$scope.$new(),this.scope.data=this.$scope.data,this.originalData=void 0,this.isMultiSelect="single"!==this.$scope.optionData.relationType,this.scope.$watch("relations",function(e){this.$scope.data.valid=!this.$scope.optionData.required||e&&0!==e.length?!0:!1}.bind(this)),this.scope.relations=[]};AutoRelationInputController.prototype=Object.create(AutoInputController.prototype),AutoRelationInputController.prototype.constructor=AutoRelationInputController,AutoRelationInputController.prototype.updateData=function(e){return this.scope.relations=[],e[this.$attrs["for"]]?(this.isMultiSelect?this.scope.relations=e[this.$attrs["for"]]:this.scope.relations.push(e[this.$attrs["for"]]),this.originalData=this.scope.relations.slice(),void console.log("AutoRelationInput: scope.data is %o",this.scope.relations)):void console.warn("No data provided for %o",this.$attrs["for"])},AutoRelationInputController.prototype.getSaveCalls=function(){var e;return e=this.isMultiSelect?this.getMultiSelectSaveCalls():this.getSingleSelectSaveCalls(),console.log("AutoRelationInputController: saveCalls are %o",e),e},AutoRelationInputController.prototype.getSingleSelectSaveCalls=function(){if(!this.scope.relations)return console.log("AutoRelationInputController: relations empty"),!1;if(0===this.scope.relations.length&&this.originalData&&0!==this.originalData.length)return{url:this.$attrs["for"]+"/"+this.originalData[0].id,method:"DELETE"};if(this.scope.relations.length&&(!this.originalData||this.originalData.length&&this.scope.relations[0].id!==this.originalData[0].id)){var e={};return e[this.$scope.optionData.relationKey]=this.scope.relations[0].id,{url:"",data:e}}return!1},AutoRelationInputController.prototype.getMultiSelectSaveCalls=function(){var e=[],t=[],n=[],a=[],o=[];return this.scope.relations&&this.scope.relations.length&&this.scope.relations.forEach(function(e){a.push(e.id)}),this.originalData&&this.originalData.length&&this.originalData.forEach(function(e){n.push(e.id)}),n.forEach(function(t){-1===a.indexOf(t)&&(e.push(t),o.push({method:"DELETE",url:this.$attrs["for"]+"/"+t}))}.bind(this)),a.forEach(function(e){-1===n.indexOf(e)&&(t.push(e),o.push({method:"POST",url:this.$attrs["for"]+"/"+e}))}.bind(this)),console.log("AutoRelationInput: Added %o, deleted %o – calls: %o",t,e,o),0===o.length?!1:o},AutoRelationInputController.prototype.afterInit=function(){var e=$(this.$templateCache.get("autoRelationInputTemplate.html"));e.find("[data-relation-input]").attr("data-relation-entity-endpoint",this.$scope.optionData.relation).attr("data-relation-entity-search-field",this.$scope.originalAttributes.suggestionSearchField).attr("data-relation-suggestion-template",this.$scope.originalAttributes.suggestionTemplate).attr("data-multi-select",this.isMultiSelect),this.element.append(e),this.$compile(e)(this.scope)},angular.module("jb.backofficeAutoFormElement").directive("autoRelationInput",[function(){return{require:["autoRelationInput","^^detailView"],controller:"AutoRelationInputController",link:function(e,t,n,a){a[0].init(t,a[1])},scope:!0}}]).controller("AutoRelationInputController",AutoRelationInputController).run(function(e){e.put("autoRelationInputTemplate.html","<div class='form-group'><label data-backoffice-label></label><div data-relation-input class='relation-select col-md-9'data-ng-model='relations'data-deletable='optionData.originalRelation != \"belongsTo\"'></div></div>")});var AutoTextInputController=function(e,t){AutoInputController.call(this,e,t),this.select=this.$scope.data.name,this._validateInput()};AutoTextInputController.prototype=Object.create(AutoInputController.prototype),AutoTextInputController.prototype.constructor=AutoTextInputController,AutoTextInputController.prototype.updateData=function(e){this.originalData=this.$scope.data.value=e[this.$attrs["for"]]},AutoTextInputController.prototype.getSaveCalls=function(){if(this.originalData===this.$scope.data.value)return!1;var e={};return e[this.$scope.data.name]=this.$scope.data.value,{url:"",data:e,method:void 0===this.detailViewController.getEntityId()?"POST":"PATCH"}},AutoTextInputController.prototype._validateInput=function(){this.$scope.$watch("data.value",function(e){this.$scope.data.valid=this.$scope.optionData.required&&!e?!1:!0}.bind(this))},angular.module("jb.backofficeAutoFormElement").controller("AutoTextInputController",AutoTextInputController).directive("autoTextInput",[function(){return{link:function(e,t,n,a){a[1].init(t,a[0])},controller:"AutoTextInputController",require:["^detailView","autoTextInput"],templateUrl:"autoTextInputTemplate.html"}}]).run(function(e){e.put("autoTextInputTemplate.html","<div class='form-group form-group-sm'><label data-backoffice-label></label><div class='col-md-9'><input type='text' data-ng-attr-id='{{ entityName }}-{{ data.name }}-label' class='form-control input-sm' data-ng-attrs-required='isRequired()' data-ng-model='data.value'/></div></div>")}),angular.module("jb.backofficeAutoFormElement").directive("backofficeLabel",["$templateCache","$compile",function(e,t){return{link:function(n,a){var o=n.$new(),i=$(e.get("backofficeLabelTemplate.html"));o.valid=o.required=o.name=o.entityName=void 0,n.$watch("data",function(e){return e?(o.valid=e.valid,void(o.name=e.name)):void(o.valid=o.name=void 0)},!0),n.$watch("entityName",function(e){o.entityName=e}),n.$watch("optionData.required",function(e){o.required=e}),a.replaceWith(i),t(i)(o)}}}]).run(function(e){e.put("backofficeLabelTemplate.html","<label class='control-label col-md-3' data-ng-class='{invalid: !valid}'><span data-ng-if='required' class='required-indicator '>*</span><span data-translate='web.backoffice.{{ entityName }}.{{ name }}'></span></label>")}),angular.module("jb.backofficeDetailView",["eb.apiWrapper","ebBackofficeConfig"]).directive("detailView",[function(){return{link:function(e,t,n,a){a[0].init(t),e.detailViewController=a[0]},controller:"DetailViewController",scope:!0,require:["detailView"]}}]).controller("DetailViewController",["$scope","$rootScope","$location","$q","$attrs","$filter","APIWrapperService","BackofficeConfig",function(e,t,n,a,o,i,l,r){var s,u=(e.$new(),this),c=0,d=[],p=[];u.registeredComponents=[],u.fields=void 0,u.data=void 0,e.entityId=void 0,e.entityName=void 0,e.title=void 0,u.parseUrl=function(){var e=n.path(),t=e.split("/"),a={name:void 0,id:void 0};if(t.length<2)return a;if(t.length>=2&&(a.name=t[1]),t.length>=3){var o=parseInt(t[2],10);isNaN(o)||(a.id=o)}return a},e.entityId=u.parseUrl().id,o.$observe("entityId",function(t){e.entityId=t}),u.getEntityId=function(){return e.entityId},e.entityName=u.parseUrl().name,u.getEntityName=function(){return e.entityName},o.$observe("entityName",function(t){e.entityName=t}),u.getEntityUrl=function(){var e="/"+u.getEntityName();return u.getEntityId()&&(e+="/"+u.getEntityId()),e},u.setTitle=function(){e.title=n.path().indexOf("/new")===n.path().length-4?i("translate")("web.backoffice.create")+": ":i("translate")("web.backoffice.edit")+": ",e.title+=u.getEntityName(),u.getEntityId()&&(e.title+=" #"+u.getEntityId())},e.$watchGroup(["entityName","entityId"],function(){u.setTitle()}),u.init=function(e){s=e;var t=s.find("[data-auto-form-element], [data-hidden-input]");c=t.length,o.hasOwnProperty("entityId")?o.$observe("entityId",function(){u.getOptionData()}):u.getOptionData()},u.getOptionData=function(){console.log("DetailView: Make OPTIONS call for %o",u.getEntityName()),u.makeOptionRequest("/"+u.getEntityName()).then(function(e){u.fields=e;var t=d.slice(0);t.forEach(function(t){t(e)}),c===u.registeredComponents.length&&u.getData()},function(e){t.$broadcast("notification",{type:"error",message:"web.backoffice.detail.optionsLoadingError",variables:{errorMessage:e}})})},u.registerOptionsDataHandler=function(e){d.push(e)},u.removeOptionsDataHandler=function(e){d.splice(d.indexOf(e),1)},u.makeOptionRequest=function(e){return l.request({method:"OPTIONS",url:e}).then(function(t){return console.log("DetailView: Got OPTIONS data for %o %o",e,t),u.fields=u.parseOptionData(t),u.fields},function(e){return a.reject(e)})},u.parseOptionData=function(e){var t={};console.log("DetailView: parse %o",e);for(var n in e){var a=e[n];if(a.name&&"string"===a.type&&(t[a.name]={type:"text",required:!a.nullable}),a.name&&"decimal"===a.type&&(t[a.name]={type:"number",required:!a.nullable}),a.name&&"boolean"===a.type&&(t[a.name]={type:"boolean",required:!a.nullable}),a.name&&"datetime"===a.type&&(t[a.name]={type:"datetime",date:!0,time:!0,required:!a.nullable}),a.name&&"date"===a.type)t[a.name]={type:"datetime",date:!0,time:!1,required:!a.nullable};else if("hasOne"===n)for(var o in a)t[o]="image"===a[o].name?{type:"image"}:{type:"relation",relation:a[o]._rel.collection,relationType:"single",required:!a[o].nullable,originalRelation:"hasOne",relationKey:a[o].key};else if("hasMany"===n)for(var i in a)t[i]="language"===a[i].name?{type:"language",tableName:a[i].table.name}:"image"===a[i].name?{type:"image",tableName:a[i].table.name}:{type:"relation",relation:a[i]._rel.collection,relationType:"multiple",originalRelation:"hasMany"};else if("belongsTo"===n)for(var l in a){var r=a[l]._rel?a[l]._rel.collection:!1;t[l]={type:"relation",relation:r,relationType:"multiple",required:!1,originalRelation:"belongsTo"}}}return console.log("DetailView: parsed options are %o",t),t},u.register=function(e){if(u.registeredComponents.push(e),u.registeredComponents.length===c){if(console.log("DetailView: all elements registered (%o). Get data.",u.registeredComponents),!u.getEntityId())return void console.log("New mode (no id provided); don't get data");u.getData()}},u.getData=function(){u.makeGetRequest().then(function(e){u.data=e,u.distributeData(e)},function(e){t.$broadcast("notification",{type:"error",message:"web.backoffice.detail.loadingError",variables:{errorMessage:e}})})},u.registerGetDataHandler=function(e){p.push(e)},u.getSelectParameters=function(){for(var e=[],t=0;t<u.registeredComponents.length;t++){var n=u.registeredComponents[t];n.select&&(e=e.concat(n.select))}return console.log("DetailView %o: getSelectParameters returns %o",u.getEntityName(),e),e},u.distributeData=function(t){e.$emit("dataUpdate",{entity:u.getEntityName(),data:t}),p.forEach(function(e){e(t)})},u.updateData=function(){return u.makeGetRequest().then(function(e){return u.distributeData(e),e},function(e){return t.$broadcast("notification",{type:"error",message:"web.backoffice.detail.saveError",variables:{errorMessage:e}}),a.reject(e)})},u.makeGetRequest=function(){var e=u.getEntityUrl(),t=u.getSelectParameters();return console.log("DetailView: Get Data from %o with select %o",e,t),l.request({url:e,headers:{select:t},method:"GET"}).then(function(e){return e}.bind(this),function(e){return a.reject(e)})},e.save=function(e){var o={id:void 0};return u.makeSaveRequest(u.registeredComponents,u.getEntityName(),o).then(function(){return n.path().indexOf("/new")!==n.path().length-4||e||n.path("/"+u.getEntityName()+"/"+u.getEntityId()),e||t.$broadcast("notification",{type:"success",message:"web.backoffice.detail.saveSuccess"}),u.updateData(),o.id},function(e){return t.$broadcast("notification",{type:"error",message:"web.backoffice.detail.saveError",variables:{errorMessage:e}}),a.reject(e)})},u.makeSaveRequest=function(){for(var e=0;e<u.registeredComponents.length;e++)if(angular.isFunction(u.registeredComponents[e].isValid)&&!u.registeredComponents[e].isValid())return a.reject("Not all required fields filled out.");return u.executePreSaveTasks().then(function(){return u.makeMainSaveCall()},function(e){return a.reject(e)})},u.executePreSaveTasks=function(){for(var e=[],t=0;t<u.registeredComponents.length;t++){var n=u.registeredComponents[t];n.beforeSaveTasks&&angular.isFunction(n.beforeSaveTasks)&&e.push(n.beforeSaveTasks())}return console.log("DetailView: executePreSaveTasks has %o tasks",e.length),a.all(e)},u.makeMainSaveCall=function(){var t=u.generateSaveCalls();console.log("DetailView: Save calls are %o",t);for(var n,o=[],i=0;i<t.length;i++)t[i].url!=="/"+u.getEntityName()&&t[i].url?o.push(t[i]):n=t[i];return console.log("DetailView: Main save call is %o, other calls are %o",n,o),u.executeSaveRequest(n).then(function(t){t&&t.id&&(e.entityId=t.id);var n=[];return o.forEach(function(e){n.push(u.executeSaveRequest(e))}),a.all(n)},function(e){return a.reject(e)})},u.addCall=function(e,t){e.method||(e.method=/\/\d*\/?$/.test(e.url)?"PATCH":"POST");var n=this.getSaveCall(t,e.method,e.url);if(n||(n={method:e.method,url:e.url,data:{}},t.push(n)),e.data)for(var a in e.data)n.data[a]=e.data[a]},u.getSaveCall=function(e,t,n){var a=!1;return e.some(function(e){return e.method===t&&e.url===n?(a=e,!0):void 0}),a},u.executeSaveRequest=function(e){if(!e){console.log("DetailView: No call to be made");var t=a.defer();return t.resolve(),t.promise}var n=0===e.url.indexOf("/")?e.url:u.getEntityName()+"/"+u.getEntityId()+"/"+e.url;return console.log("DetailView: Make %o call to %o with %o",e.method,n,e.data),e.data.id_dataSource=r.dataSourceId,l.request({url:n,data:e.data,method:e.method})},u.generateSaveCalls=function(){var e=[];console.log("DetailView: Generate calls for %o registered components",u.registeredComponents.length);for(var t=0;t<u.registeredComponents.length;t++){var n=u.registeredComponents[t];if(n.getSaveCalls&&angular.isFunction(n.getSaveCalls)){var a=n.getSaveCalls();a!==!1?(angular.isArray(a)||(a=[a]),console.log("DetailView: componentCalls are %o",a),a.forEach(function(t){u.addCall(t,e)})):console.log("DetailView: No save calls for %o",n)}else console.error("DetailView: Missing getSaveCalls on component %o",n[t])}return console.log("DetailView: calls are %o",e),e},e["delete"]=function(e){return console.log("DetailView: Delete"),u.makeDeleteRequest().then(function(){return e||(n.path("/"+u.getEntityName()),t.$broadcast("notification",{type:"success",message:"web.backoffice.detail.deleteSuccess"})),!0},function(n){return e||t.$broadcast("notification",{type:"error",message:"web.backoffice.detail.deleteError",variables:{errorMessage:n}}),a.reject(n)})},u.makeDeleteRequest=function(){return console.log("DetailView: Make DELETE request"),l.request({url:"/"+u.getEntityName()+"/"+u.getEntityId(),method:"DELETE"})}}]),angular.module("jb.backofficeHiddenInput",[]).directive("hiddenInput",[function(){return{require:["hiddenInput","^detailView"],controller:"HiddenInputController",link:function(e,t,n,a){a[0].init(t,a[1])},scope:!0}}]).controller("HiddenInputController",["$scope","$attrs",function(e,t){var n,a,o=this;o.init=function(e,t){n=e,a=t,a.register(o)},o.select=t["for"],o.getSaveCalls=function(){if(console.log("HiddenInput: Get save calls; $attrs is %o",t.data),t.data){var e={};return e[t["for"]]=t.data,console.log("HiddenInput: Store data %o",e),{url:"",data:e,method:a.getEntityId()?"PATCH":"POST"}}return!1}}]),angular.module("jb.imageComponent",[]).directive("imageComponent",[function(){return{link:function(e,t,n,a){a.init(t)},controller:"ImageComponentController",scope:{images:"="},templateUrl:"imageComponentTemplate.html"}}]).controller("ImageComponentController",["$scope","$rootScope",function(e,t){function n(){s.find("input[type='file']").change(function(e){l(e.target.files)})}function a(){s.bind("drop",function(e){e.preventDefault();var t=e.originalEvent.dataTransfer.files;return l(t),!1}).bind("dragover",o).bind("dragenter",o)}function o(e){return e.preventDefault(),e.originalEvent.dataTransfer.effectAllowed="copy",!1}function i(e){var t=["image/jpeg","image/png","image/gif"];return-1===t.indexOf(e.type)?!1:!0}function l(n){for(var a=[],o=n.length-1;o>=0;o--)i(n[o])?a.push(n[o]):e.$apply(function(){t.$broadcast("notification",{type:"error",message:"web.backoffice.detail.imageTypeNotSupported",variables:{fileName:n[o].name,fileType:n[o].type}})});for(var l=0;l<a.length;l++)!function(){var e=a[l],t=new FileReader;t.onload=function(t){r(t.target.result,e)},t.readAsDataURL(e)}()}function r(t,n){e.$apply(function(){e.images.push({file:n,fileData:t})})}var s,u=this;u.init=function(e){s=e,u.addEventListeners()},e.active=void 0,e.toggleActive=function(t){return t===e.active?void(e.active=void 0):void(e.active=t)},e.addedImages=[],e.removeImage=function(t,n){t.stopPropagation(),t.preventDefault(),e.images.splice(e.images.indexOf(n),1)},u.addEventListeners=function(){a(),n()},e.showFileSelectDialog=function(e){e.preventDefault(),s.find("input[type='file']").click()}}]).run(function(e){e.put("imageComponentTemplate.html","<ul class='clearfix image-component'><li><button class='add' data-ng-click='showFileSelectDialog($event)'>{{ 'web.backoffice.detail.imageDropZone' | translate }}</button><input type='file' multiple/></li><li data-ng-repeat='image in images' data-ng-click='toggleActive(image)' data-ng-class='{active: active===image}'><img data-ng-attr-src='{{image.fileData}}' data-ng-if='image.fileData'/><img data-ng-attr-src='{{image.bucket.url}}{{image.url}}' data-ng-if='image.url'/><button class='remove' data-ng-click='removeImage($event,image)'>&times</button></li></ul>")}),angular.module("jb.localeComponent",["eb.apiWrapper"]).directive("localeComponent",[function(){return{link:function(e,t,n,a){a[0].init(t,a[1])},controller:"LocaleComponentController",require:["localeComponent"],templateUrl:"localeComponentTemplate.html",scope:{fields:"=",model:"=",entityName:"="}}}]).controller("LocaleComponentController",["$scope","APIWrapperService",function(e,t){var n,a=this;e.languages=[],e.selectedLanguages=[],e.$watch("selectedLanguages",function(e){if(0!==e.length){var t=Math.floor(100/e.length)+"%";n.find(".locale-col").css("width",t)}},!0),e.adjustHeight=function(e){a.adjustHeight($(e.currentTarget))},a.adjustHeightOfAllAreas=function(){n.find("textarea").each(function(){a.adjustHeight($(this))})},a.adjustHeight=function(e){var t=e,n=$(document.createElement("div")),a=["font-size","font-family","font-weight","lineHeight","width","padding-top","padding-left","padding-right"];a.forEach(function(e){n.css(e,t.css(e))}),n.css("position","relative").css("top","-10000px").text(t.val()).appendTo("body");var o=Math.min(n.height(),200);n.remove(),t.height(Math.max(o,parseInt(t.css("lineHeight"),10)))},a.toggleLanguage=function(t){1===e.selectedLanguages.length&&e.selectedLanguages[0]===t;var n=e.selectedLanguages.indexOf(t);n>-1?e.selectedLanguages.splice(n,1):e.selectedLanguages.push(t),setTimeout(function(){a.adjustHeightOfAllAreas($(this))}.bind(this),100)},e.toggleLanguage=function(e,t){e.preventDefault(),a.toggleLanguage(t)},e.isSelected=function(t){return e.selectedLanguages.indexOf(t)>-1},e.hasTranslation=function(t){if(!e.model[t])return!1;var n=0;for(var a in e.model[t])e.model[t][a]&&n++;return n>0},a.init=function(e){n=e,setTimeout(function(){a.adjustHeightOfAllAreas()},1e3)},a.getLanguages=function(){t.request({url:"/language",method:"GET"}).then(function(t){t.forEach(function(t){0===e.selectedLanguages.length&&a.toggleLanguage(t.id),e.languages.push({id:t.id,code:t.code})})},function(e){$rootScope.$broadcast("notification",{type:"error",message:"web.backoffice.detail.loadingError",variables:{errorMessage:e}})})},a.getLanguages()}]).run(function(e){e.put("localeComponentTemplate.html","<div class='locale-component'><ul class='nav nav-tabs'><li data-ng-repeat='lang in languages' data-ng-class='{active:isSelected(lang.id)}'><a href='#' data-ng-click='toggleLanguage($event,lang.id)'>{{lang.code|uppercase}} <span data-ng-if='hasTranslation(lang.id)' class='fa fa-check'></span></a></li></ul><div class='locale-content clearfix'><div class='locale-col' data-ng-repeat='lang in languages' data-ng-show='isSelected( lang.id )'><p>{{ lang.code | uppercase }}</p><div data-ng-repeat='field in fields'><label data-translate='web.backoffice.{{entityName}}.{{field}}' data-ng-attr-for='locale-{{lang.id}}-{{field}}'></label><textarea data-ng-model='model[ lang.id ][ field ]' data-ng-attr-id='locale-{{lang.id}}-{{field}}' class='form-control' data-ng-keyup='adjustHeight( $event )' data-ng-focus='adjustHeight( $event )' /></textarea></div></div></div></div>")}),angular.module("jb.relationInput",["eb.apiWrapper"]).directive("relationInput",[function(){return{require:["relationInput","ngModel"],controller:"RelationInputController",link:function(e,t,n,a){a[0].init(t,a[1])},scope:{},templateUrl:"relationInputTemplate.html"}}]).controller("RelationInputController",["$scope","$attrs","$q","$rootScope","APIWrapperService",function(e,t){function n(){i.find(".entity-suggestions input").blur(function(){setTimeout(function(){e.$apply(function(){s=!1})},100)})}function a(){$(document).on("click."+u,function(t){$(t.target).closest(i.find(".selected-entities")).length>0||0===$(t.target).closest(i.find(".entity-suggestions")).length&&e.$apply(function(){s=!1})})}function o(){$(document).off("click."+u)}var i,l,r=this,s=!1,u=(Math.random()+"").replace(".","").substring(1,15);r.entityUrl=t.relationEntityEndpoint,r.searchField=t.relationEntitySearchField,r.searchResultTemplate=t.relationSuggestionTemplate,r.isMultiSelect="true"===t.multiSelect?!0:!1,e.deletable=e.$parent.$eval(t.deletable);var c=["entityUrl","searchResultTemplate","searchField"];c.forEach(function(e){r[e]||console.error("RealtinInput: Missing %s, is mandatory",e)}),e.newEntityUrl=r.entityUrl,e.entities=void 0,e.$watch(function(){return l.$modelValue},function(t){e.entities=t}),r.init=function(e,t){i=e,l=t,console.log("RelationInput: model is %o on init",t)},r.addRelation=function(t){if(r.isMultiSelect){var n=l.$modelValue&&angular.isArray(l.$modelValue)?l.$modelValue.slice():[];n.push(t),l.$setViewValue(n)}else l.$setViewValue([t]);e.$broadcast("entitiesUpdated",e.entities)},r.removeRelation=function(t){if(r.isMultiSelect){var n=l.$modelValue;n.splice(n.indexOf(t),1),l.$setViewValue(n)}else l.$setViewValue([]);e.$broadcast("entitiesUpdated",e.entities)},r.isOpen=function(){var e=i.find(".selected-entities input");return s?(e.hide(),a()):(e.show(),o()),s},r.setupEventListeners=function(){e.$on("relationInputFieldFocus",function(){e.$apply(function(){s=!0})}),e.$on("relationInputSelectedEntitiesClick",function(){e.$apply(function(){s=!s})}),n()}}]).run(function(e){e.put("relationInputTemplate.html","<div data-relation-input-selected-entities></div><div data-relation-input-suggestions></div><div clearfix><a data-ng-attr-href='/#{{ newEntityUrl }}/new'='#'><span class='fa fa-plus'></span> New</a></div>")
}).directive("relationInputSuggestions",[function(){return{require:["relationInputSuggestions","^relationInput"],link:function(e,t,n,a){a[0].init(t,a[1])},controller:"RelationInputSuggestionsController",replace:!0}}]).controller("RelationInputSuggestionsController",["$scope","$rootScope","$compile","$templateCache","APIWrapperService","RelationInputService",function(e,t,n,a,o,i){var l,r,s=this;e.results=[],e.selected=void 0,e.loading=!1,e.searchQuery=void 0,e.$watch("searchQuery",function(e){s.getData(e)}),e.selectResult=function(t){r.addRelation(t),e.results=[],e.searchQuery=""},e.$on("entitiesUpdated",function(){s.filterResults()}),s.init=function(e,t){l=e,r=t,s.renderTemplate(),s.setupEventListeners()},e.isOpen=function(){var e=r.isOpen();return e&&setTimeout(function(){l.find("input").focus()},100),e},s.renderTemplate=function(){var t=r.searchResultTemplate;t=t.replace(/\[\[(\s*)(((?!\]\]).)*)\]\]/gi,function(e,t,n){return"{{ result."+n+" }}"});var o=$(a.get("relationInputSuggestionsTemplate.html"));o.find("li").append(t),l.replaceWith(o),n(o)(e),l=o},s.setupEventListeners=function(){l.find("input").keydown(function(t){-1!==[40,38,13].indexOf(t.which)&&e.$apply(function(){switch(t.which){case 40:s.updateSelected(t,1);break;case 38:s.updateSelected(t,-1);break;case 13:s.addSelected(t)}})})},s.updateSelected=function(t,n){t.preventDefault();for(var a,o=0;o<e.results.length;o++)e.results[o]===e.selected&&(a=o);void 0===a||-1===n&&0===a||1===n&&a===e.results.length-1||(e.selected=e.results[a+n])},s.addSelected=function(t){t.preventDefault(),e.selected&&e.selectResult(e.selected)},s.getData=function(n){if(e.results=[],n){e.loading=!0;var a=r.searchField,i=a+"=like('%"+n+"%')",l=s.getSelectFields();console.log("RelationInput: request %s:%s, filter %o, select %o",r.entityUrl,i,l.join(",")),o.request({url:r.entityUrl,method:"GET",headers:{filter:i,select:l.join(","),range:"0-10"}}).then(function(t){e.loading=!1,e.results=t,s.filterResults()},function(n){e.loading=!1,t.$broadcast("notification",{type:"error",message:"web.backoffice.detail.loadingError",variables:{errorMessage:n}})})}},s.getSelectFields=function(){var e=r.searchResultTemplate;return e||console.error("RelationInput: Missing searchResultTemplate in %o",s),i.extractSelectFields(e)},s.filterResults=function(){var t=r.entities;if(r.isMultiRelation)for(var n=0;n<t.length;n++)for(var a=e.results.length-1;a>=0;a--)e.results[a].id&&t[n].id&&e.results[a].id===t[n].id&&e.results.splice(a,1);e.results.length>0&&(e.selected=e.results[0]),console.log("RelationInput: filterResults; results is %o, selected %o",e.results,e.selected)}}]).run(function(e){e.put("relationInputSuggestionsTemplate.html","<div class='entity-suggestions' data-ng-show='isOpen()'><input type='text' class='form-control' data-ng-model='searchQuery' /><div class='progress progress-striped active' data-ng-if='loading'><div class='progress-bar' role='progressbar' style='width:100%'></div></div><div class='results-list'><ul data-ng-if='results.length > 0'><li data-ng-repeat='result in results' data-ng-class='{selected:selected===result}' data-ng-click='selectResult(result)'><!-- see renderTemplate --></li></ul></div></div>")}).directive("relationInputSelectedEntities",[function(){return{link:function(e,t,n,a){a[0].init(t,a[1])},controller:"RelationInputSelectedEntitiesController",require:["relationInputSelectedEntities","^relationInput"],templateUrl:"relationInputSelectedEntitiesTemplate.html",replace:!0}}]).controller("RelationInputSelectedEntitiesController",["$scope","$location","$templateCache","$compile",function(e,t,n,a){var o,i,l=this;e.visitEntity=function(n,a){n.preventDefault(),t.path(e.newEntityUrl+"/"+a.id)},e.removeEntity=function(e,t){e.preventDefault(),i.removeRelation(t)},l.init=function(t,n){o=t,i=n,i.setupEventListeners(),e.isMultiSelect=i.isMultiSelect,l.renderTemplate(),l.setupEventListeners()},l.renderTemplate=function(){var t=i.searchResultTemplate;t=t.replace(/\[\[(\s*)(((?!\]\]).)*)\]\]/gi,function(e,t,n){return"{{ result."+n+" }}"});var l=$(n.get("relationInputSelectedEntitiesTemplate.html"));l.find("li > span").append(t),o.replaceWith(l),a(l)(e),o=l},l.setupEventListeners=function(){o.find("input").focus(function(){e.$emit("relationInputFieldFocus")}),o.click(function(){e.$emit("relationInputSelectedEntitiesClick")})}}]).factory("RelationInputService",[function(){return{extractSelectFields:function(e){console.log("RelationInputService: Get fields from %o",e);var t=e.split("[[").slice(1),n=[];return t.forEach(function(e){var t=e.substring(0,e.indexOf("]]"));t.indexOf("|")>-1&&(t=t.substring(0,t.indexOf("|"))),t=t.replace(/^\s*|\s*$/gi,""),t=t.replace(/\[\d+\]/g,""),n.push(t)}),n}}}]).run(function(e){e.put("relationInputSelectedEntitiesTemplate.html","<div class='selected-entities' data-ng-class='{ \"single-select\": !isMultiSelect }'><input type='text' /><ul><li data-ng-repeat='result in entities' data-ng-class='{empty: !result.name}'><span><!-- see renderTemplate() --></span><button data-ng-click='visitEntity($event, result)'><span class='fa fa-pencil'></span></button><button data-ng-if='deletable' data-ng-click='removeEntity($event,result)'>&times;</button></li></ul></div>")});